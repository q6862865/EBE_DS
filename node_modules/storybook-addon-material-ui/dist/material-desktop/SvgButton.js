'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _IconButton = require('material-ui/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
    iconScale: _propTypes2.default.number.isRequired,
    icon: _propTypes2.default.element.isRequired,
    tooltip: _propTypes2.default.string,
    tooltipPosition: _propTypes2.default.string,
    width: _propTypes2.default.number,
    onTouchTap: _propTypes2.default.func
};

var defaultProps = {
    iconScale: 0.8,
    tooltipPosition: 'top-center',
    width: 32
};

var contextTypes = {
    muiTheme: _propTypes2.default.object.isRequired
};

var SvgButton = function (_React$Component) {
    (0, _inherits3.default)(SvgButton, _React$Component);

    function SvgButton(props, context) {
        (0, _classCallCheck3.default)(this, SvgButton);

        var _this = (0, _possibleConstructorReturn3.default)(this, (SvgButton.__proto__ || (0, _getPrototypeOf2.default)(SvgButton)).call(this, props, context));

        _this.scaleProp = {
            style: {
                transform: 'scale(' + props.iconScale + ')',
                width: 24,
                margin: '0 auto'
            }
        };
        _this.butnProp = {
            style: {
                marginLeft: (24 - props.width) / 2,
                width: props.width,
                display: 'flex',
                justifyContent: 'center',
                overflow: 'hidden'
            },
            title: props.tooltip,
            onTouchTap: props.onTouchTap
        };
        return _this;
    }

    (0, _createClass3.default)(SvgButton, [{
        key: 'render',
        value: function render() {
            var icon = _react2.default.cloneElement(this.props.icon, {
                color: this.context.muiTheme.palette.secondaryTextColor
            });
            return _react2.default.createElement(
                'div',
                {
                    style: {
                        width: 24
                    }
                },
                _react2.default.createElement(
                    'div',
                    this.butnProp,
                    _react2.default.createElement(
                        'div',
                        { style: { width: 48 } },
                        _react2.default.createElement(
                            _IconButton2.default,
                            {
                                tooltip: null,
                                style: { padding: 0 }
                            },
                            _react2.default.createElement(
                                'div',
                                null,
                                _react2.default.createElement(
                                    'div',
                                    this.scaleProp,
                                    icon
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return SvgButton;
}(_react2.default.Component);

exports.default = SvgButton;


SvgButton.propTypes = propTypes;
SvgButton.defaultProps = defaultProps;
SvgButton.contextTypes = contextTypes;